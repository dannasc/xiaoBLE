#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include "keys_pt_abnt2.h"


#define XXX &none
#define ___ &trans

#define COMBO_TIMEOUT 60

#define DEF 0
#define NAV 1
#define FN 2
#define NUM 3
#define SYS 4

&lt {
    tapping-term-ms = <125>; // This is the value already set by default
};

/ {
        bht: balanced_hold_taps {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <375>;    // <---[[moderate duration]]
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
            quick-tap-ms = <250>;       // repeat on tap-into-hold
            require-prior-idle-ms = <200>;
        };
    };
/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <4>;
        };
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                DEF_layer {
                        display-name = "Base";
                        bindings = <
&bht F4 ESC     	&kp Q	&kp W	&kp E           	&kp R           	&bht LC(LA(T)) T		&kp Y    	&kp U      	&kp I    	&kp O     	&kp P                 	&kp LGUI
&bht LS(TAB) TAB	&kp A	&kp S	&kp D           	&kp F           	&kp G           		&kp H    	&kp J      	&kp K    	&kp L     	&kp PT_C_CEDILLA      	&kp DEL 
&kp LSHIFT      	&kp Z	&kp X	&bht LC(LS(C)) C	&bht LC(LS(V)) V	&kp B           		&kp N    	&kp M      	&kp COMMA	&kp PT_DOT	&bht LALT PT_SEMICOLON	&kp RALT
                	     	     	&kp LCTRL       	&lt FN COMMA    	&kp SPACE       		&kp ENTER	&lt NAV DOT	&kp BSPC 	          	                      	        
                        >;
                };

                

                NAV_layer {
                        display-name = "Navigation";
                        bindings = <
&bht PT_DQT PT_SQT	&kp PT_EXCL 	&kp PT_AT	&kp PT_HASH	&kp PT_DOLLAR	&kp PT_PERCENT		&trans          	&kp PT_AMPS   	&kp PT_ASTRK	&trans         	&kp PT_ACUTE	&bht PT_RIGHT_BRACE PT_LEFT_BRACE    
&kp LA(TAB)       	&kp PT_QMARK	&trans   	&trans     	&trans       	&kp PT_AMPS   		&kp LEFT_ARROW  	&kp DOWN_ARROW	&kp UP_ARROW	&kp RIGHT_ARROW	&kp PT_TILDE	&bht PT_RIGHT_BRACKET PT_LEFT_BRACKET
&kp LSHIFT        	&trans      	&trans   	&trans     	&trans       	&trans        		&kp PT_BACKSLASH	&kp PT_SLASH  	&kp PT_ASTRK	&kp PT_MINUS   	&kp PT_EQUAL	&bht PT_RPAR PT_LPAR                 
                  	            	         	&trans     	&trans       	&trans        		&trans          	&trans        	&trans      	               	            	                                     
                        >;

                };

                FN_layer {
                        display-name = "Function, F key";
                        bindings = <
&trans	&trans	&kp PT_SLASH    	&kp PT_ASTRK	&kp PT_PLUS 	&bht PT_RIGHT_BRACE PT_LEFT_BRACE    		&trans      	&bht F7 NUMBER_7	&bht F8 NUMBER_8	&bht F9 NUMBER_9	&kp F12	&trans
&trans	&trans	&kp PT_BACKSLASH	&kp PT_EQUAL	&kp PT_MINUS	&bht PT_RIGHT_BRACKET PT_LEFT_BRACKET		&trans      	&bht F4 NUMBER_4	&bht F5 NUMBER_5	&bht F6 NUMBER_6	&kp F11	&trans
&trans	&trans	&kp PT_PIPE     	&kp PT_COMMA	&kp PT_DOT  	&bht PT_RPAR PT_LPAR                 		&kp NUMBER_0	&bht F1 NUMBER_1	&bht F2 NUMBER_2	&bht F3 NUMBER_3	&kp F10	&trans
      	      	                	&trans      	&trans      	&trans                               		&trans      	&trans          	&trans          	                	       	      
                        >;
		};
		
		        NUM_layer {
                        display-name = "Number, Symbol";
                        bindings = <
//╭──────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────────────┬──────────────┬─────────────┬─────────────┬─────────────╮ ╭──────╮
    ___     &bht DQT QMARK &kp LT        &kp DLLR      &kp GT        &kp BSLH       &bht EXCL EQUAL  &bht PLUS N7 &bht MINUS N8 &bht UNDER N9  &kp RG(P)     ___
//├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────=!──────┼──────7+──────┼─────8-──────┼─────9_──────┼─────────────┤ ├──────┤
    ___     &kp AT         &kp LPAR      &kp AMPS      &kp RPAR      &kp GRAVE      &bht HASH KP_DOT &bht STAR N4 &bht FSLH N5  &bht BSLH N6  ___           ___
//├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────.#──────┼─────4*───────┼──────5/─────┼──────6\─────┼─────────────┤ ├──────┤
    ___     &kp TILDE      &kp LBKT      &kp CARET     &kp RBKT      ___            &bht PRCNT N0   &bht PIPE N1   &bht AMPS N2  &bht HASH N3  ___           ___
//├──────┤ ╰─────────────┼─────────────┴─────────────┼─────────────┼─────────────┤ ├──────0%──────┼──────1|──────┼─────2&──────┼──────3#──────┼─────────────╯ ╰──────╯
                                         ___           ___           ___             ___           &kp DEL        ___                                    
//                                     ╰─────────────┴─────────────┴─────────────╯ ╰──────────────┴──────────────┼─────────────╯                                     
                        >;
		};

                        		SYS_layer {
                        display-name = "Bluetooth, Reset";
                        bindings = <
&trans    	&bt BT_SEL 0	&bt BT_SEL 1	&bt BT_SEL 2	&bt BT_SEL 3	&bt BT_SEL 4		&kp C_NEXT      	&trans           	&trans              	&trans         	&kp PRINTSCREEN	&bt BT_CLR_ALL
&trans    	&trans      	&trans      	&trans      	&trans      	&trans      		&kp C_PLAY_PAUSE	&kp C_VOLUME_UP  	&kp C_BRIGHTNESS_INC	&kp C_AL_LOGOFF	&trans         	&bootloader   
&bt BT_CLR	&bt BT_PRV  	&bt BT_NXT  	&trans      	&trans      	&trans      		&kp C_PREVIOUS  	&kp C_VOLUME_DOWN	&kp C_BRIGHTNESS_DEC	&trans         	&kp A          	&sys_reset    
          	            	            	&trans      	&trans      	&trans      		&trans          	&trans           	&trans              	               	               	              
                       >;
		};

        };
};